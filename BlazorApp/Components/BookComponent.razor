@using BlazorApp.Models
@inject IWebHostEnvironment env

<div class="col">
	<div class="card card-hover overflow-hidden h-100">
		<div class="h-100">
			<div class="row g-0">
				<div class="col-4 col-sm-12 product-border">
					<div class="ratio ratio-1x1 img-container">
						<img src="@GetBookImage()" class="" alt="...">
					</div>
				</div>
				<div class="col">
					<div class="h-100 d-flex flex-column">
						<div class="card-body border-bottom">
							<div class="fw-bold mb-2">@book.Title</div>
							<small class="card-subtitle"><i>by @book.Author</i></small>
						</div>

						<div class="card-body">
							<div class="row row-cols-1 row-cols-sm-2 gy-1 text-nowrap">
								<div class="col text-end text-sm-start">
									<span class="mx-1" style="color: @(book.IsInStock ? "green" : "grey")">
										@(book.IsInStock ? "in stock" : "out of stock")
									</span>
								</div>
								<div class="col text-end">
									<div class="active text-alert fw-semibold me-1">@book.Price.ToString("#,###.00") dkk</div>
								</div>
								<div class="col">
									<a href="/books/@book.Id" class="btn btn-sm btn-light btn-outline-dark d-none d-sm-inline-block stretched-link">More Info</a>
									<a href="/books/@book.Id" class="d-block d-sm-none stretched-link"></a>
								</div>
								<div class="col text-end">
									<a href="/cart" class="btn btn-sm btn-light btn-outline-dark position-relative z-1">Add to cart</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public Book? book { get; set; }
	public bool isLoading = true;

	protected override async Task OnInitializedAsync()
	{
		//isLoading = false;
		StateHasChanged();
	}

	private string GetBookImage()
	{
		var rootPath = Path.Combine(env.ContentRootPath, "files");
		var filePath = $"books/{book.Id}.jpg";
		var fullPath = Path.Combine(rootPath, filePath);

		if (System.IO.File.Exists(fullPath))
		{
			return $"files/{filePath}";
		}
		else return "images/4.png";
	}
}