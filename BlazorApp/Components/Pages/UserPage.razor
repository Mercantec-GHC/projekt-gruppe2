@page "/u/{Username}"
@using BlazorApp.Models;

@if (User == null)
{
	<ErrorPage Status="404" />
}
else if (User.Username != null)
{
	<div class="card shadow">
		<h1 class="card-header">@User.FirstName @User.LastName</h1>
		<div class="card-body">
			@User.CreatedAt.ToShortDateString()
		</div>
		<h3 class="card-header border-top">Books for sale.</h3>
		<div class="card-body">
			<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3">
				@foreach (Book book in Books)
				{
					@* <BookComponent book="book"></BookComponent> *@
					<div class="col">
						<div class="card overflow-hidden h-100">
							<div class="h-100">
								<div class="row g-0">
									<div class="col-4 col-sm-12 product-border">
										<div class="ratio ratio-1x1 img-container">
											<img src="images/3.jpg" class="" alt="...">
										</div>
									</div>
									<div class="col">
										<div class="h-100 d-flex flex-column">
											<div class="card-body border-bottom">
												<div class="fw-bold mb-2">@book.Title</div>
												<small class="card-subtitle"><i>by @book.Author</i></small>
											</div>
											@* <div class="card-body border-bottom">
												<div class="mb-2">@book.Description</div>
											</div> *@

											<div class="card-body">
												<div class="row row-cols-1 row-cols-sm-2 gy-1">
													<div class="col">
														<div class="d-flex justify-content-end justify-content-sm-start">
															<span style="color: @(book.IsInStock ? "green" : "grey")">
																@(book.IsInStock ? "in stock" : "out of stock")
															</span>
														</div>
													</div>
													<div class="col">
														<div class="d-flex justify-content-end">
															<div class="active text-alert fw-semibold">@book.Price.ToString("#,###.00") dkk</div>
														</div>
													</div>
													<div class="col">
													</div>
													<div class="col">
														<div class="d-flex justify-content-end">
															<a href="#" class="btn btn-sm btn-light btn-outline-dark ml-2">Add to cart</a>
														</div>
													</div>
												</div>
											</div>

										</div>
									</div>
								</div>
							</div>

						</div>
					</div>
				}

			</div>
		</div>
		<div class="card-footer">
		</div>
	</div>
}

@code {
	[Parameter]
	public string Username { get; set; }

	private User User = new User();
	private ModelList<Book> Books = new ModelList<Book>();

	protected override async Task OnInitializedAsync()
	{
		ModelList<User> users = await User.QueryBy(("username", Username));
		User = users.FirstOrDefault();
		Books = await User.GetBooks();
	}
}
